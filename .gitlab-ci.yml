stages:
  - build
  - docker-push

variables:
  IMAGE: '$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG'
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: build
  image: openjdk:11
  only:
    - master
  cache:
    - key: $CI_COMMIT_REF_SLUG
      paths:
        - .gradle/
    - key: $CI_PIPELINE_ID
      policy: push
      paths:
        - build/
  before_script:
    # download artifact and put it to /libs/*.jar (training library from corresponding project)
    - 'curl --location --output artifacts.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.com/api/v4/projects/24036417/jobs/artifacts/master/download?job=build"'
    - unzip -j -d libs artifacts.zip
    - rm artifacts.zip
  script:
    - ./gradlew jibBuildTar --image=$IMAGE
    # build standalone jar and save as job artifact
    - ./gradlew build
  artifacts:
    paths:
      - build/libs/

docker-push:
  stage: docker-push
  image: docker:stable
  only:
    - master
  cache:
    key: $CI_PIPELINE_ID
    policy: pull
    paths:
      - build/
  services:
    - docker:stable-dind
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker load --input build/jib-image.tar
    - docker push $IMAGE
